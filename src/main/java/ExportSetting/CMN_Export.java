/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ExportSetting;

import static com.codeborne.selenide.Condition.visible;
import static com.codeborne.selenide.Selectors.byText;
import static com.codeborne.selenide.Selenide.$;
import static com.codeborne.selenide.Selenide.open;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Reader;
import java.nio.file.Paths;

import org.apache.commons.lang3.StringUtils;
import org.jsoup.nodes.Document;
import org.openqa.selenium.remote.BrowserType;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.codeborne.selenide.Configuration;
import com.codeborne.selenide.Selenide;
import com.codeborne.selenide.SelenideElement;

import java.nio.charset.Charset;
import java.nio.file.Files;
import com.opencsv.bean.CsvToBean;
import com.opencsv.bean.CsvToBeanBuilder;

import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;

public class CMN_Export {

	final static Logger logger = LoggerFactory.getLogger(CMN_Export.class);
	
	private CMN_Setting setting = null;
	
	public CMN_Export (CMN_Setting setting) {
		this.setting = setting;
	}
	  
	/**
	 * 実行処理
	 * @param args
	 * @throws Exception
	 */
    public void service() throws Exception {
		
    	logger.info("main processing Start!!...");
    	// 設定処理
    	setupConfig(this.setting.getServerurl(), this.setting.getSelenide());
    	
    	// 画面操作
		login(this.setting.getUid(), this.setting.getPw());

		// Visualforce埋め込み型設定画面
		List<CMN_TargetSetting> settings = findSettingFile(this.setting.getCapturelist());

		for (CMN_TargetSetting target : settings) {
			if (StringUtils.equals("VF", target.getType())) {
				String el = findVFSettings(target.getContext());
				CMN_File.writeFile(this.setting.getSelenide() + CMN_File.sepStr() + target.getDevelopername() + ".html", el);
			}
			if (StringUtils.equals("LEX", target.getType())) {
				String el = findLEXSettings(target.getContext());
				CMN_File.writeFile(this.setting.getSelenide() + CMN_File.sepStr() + target.getDevelopername() + ".html", el);
			}
		}

		logger.info("main processing End...");
    }
    
    private List<CMN_TargetSetting> findSettingFile(String filename) throws IOException {
    	
    	logger.info("findSettingFile processing Start!!...");
    	logger.debug("Target File Name : " + filename);
    	Charset charset = Charset.forName("SJIS");
    	Reader reader = Files.newBufferedReader(Paths.get(filename), charset);
    	CsvToBean<CMN_TargetSetting> csvToBean = new CsvToBeanBuilder<CMN_TargetSetting>(reader).withType(CMN_TargetSetting.class).build();
    	
    	return csvToBean.parse();
    }

    /**
     * 設定画面（Visualforce埋め込み）の設定値取得奏者処理
     */
    private static String findVFSettings(String url) {

    	logger.info("dispach processing Start!!...");
    	logger.debug("Dispach VF Type URL : " + url);
		open(url);
		logger.debug("dispach processing change URL...");

		SelenideElement el = $("iframe[force-alohapage_alohapage='']");
		Selenide.switchTo().frame(el);
		String result = $("body.setupTab").innerHtml();
		
		logger.debug("dispach processing End...");
		return result;
    }
    
    /**
     * 設定画面（LEX）の設定値取得奏者処理
     */
    private static String findLEXSettings(String url) {

    	logger.info("dispach processing Start!!...");
    	logger.debug("Dispach LEX Type URL : " + url);
		open(url);
		logger.debug("dispach processing change URL...");

		String result = $("div.setupcontent").innerHtml();
		
		logger.debug("dispach processing End...");
		return result;
    }
    
    /**
     * ログイン操作処理
     * @param uid ユーザＩＤ
     * @param pw パスワード
     */
    private static void login(String uid, String pw) {
    	logger.info("login processing Start!!...");
		open("/");
		$("#username").setValue(uid);
		$("#password").setValue(pw);
		$("#Login").click();
		logger.debug("User ID : "+ uid);
		logger.debug("Password : " + pw);
	    SelenideElement notification = $(byText("Scheduled Maintenance Notification"));
	    if (notification.is(visible)) {
	      notification.closest("div").find(byText("Continue")).click();
	    }
	    logger.debug("login processing End...");
    }
    
    /**
     * Selenide設定処理
     * @param env 接続環境
     * @param dir 出力結果格納先
     */
    private static void setupConfig(String env, String dir) {
    	logger.info("setup processing Start!!...");
    	Configuration.browser = BrowserType.FIREFOX;
    	String baseUrl = env;
    	Configuration.baseUrl = baseUrl;
		Configuration.timeout = 1000 * 60 * 1;
		Configuration.reportsFolder = dir;
		logger.info("Base Url : " + baseUrl);
		logger.info("Report Floder : " + dir);
		logger.debug("setup processing End...");
    }
        
}
